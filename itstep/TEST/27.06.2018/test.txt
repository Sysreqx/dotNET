Разработка с использованием платформы Microsoft .NET и языка C#
Список задач для закрепления материала недели #1
Список тем (практика):
• работа с консолью
• базовые типы данных (string, char, int, byte, bool, decimal и т.д.)
• работа с API классов String, Math, Char, Console, Convert, DateTime, TimeStamp,
CultureInfo, Random, StringBuilder
• Явное и неявное преобразование арифметических типов
• Работа с аргументами коммандной строки
• Работа с условными операторами (if-else, тернарный оператор)
• Работа с оператором switch-case, часть I
• Работа с операторами checked-unchecked
• Работа с перечислениями (enum), часть I
• Работа с циклами (for, while, do-while, foreach), часть I
• Работа с форматированием строки (валюта, verbatim string, интерполяция)
• Особенности иммутабельной природы строки в .NET
• Оператор Элвиса (Null-coalescing operator)
• Работа с массивами (одномерные, двумерные, зубчатые), особенности
инициализация массивов
• Работа с методами и модификатор метода param
• Опциональные и именованные параметры методов
• Методы-выражения (Expression-bodied method)
• Локальные методы (Local functions)
• Кортежи (Tuple) и именованные кортежи
• Перегрузка методов (method overloading)
Список тем (теория):
• .NET Framerork и C#
• Что такое .NET Framework, CLR, CLS, CTS, MSIL, CIL, IL, ILDASM, JIT-compiler,
managed and unmanaged code, assembly, metadata, manifest, Garbage Collector?
Список задач для практики (задачи с одной звездочкой (*) – повышенная сложность и\или
использование новых классов и тем, с двумя (**) – олимпиадные задачи и задачи с собеседовании
на позицию Junior-разработчика, (***) – реальный заказ, срок исполнения – 1 месяц, стоимость –
250К на 2016 год.):
1. Написать программу, которая считывает строку с клавиатуры и определяет, сколько заглавных
букв в строке.
2. Написать программу, которая считывает строку с клавиатуры и определяет, сколько цифр в
строке.
3. Написать программу, которая считывает 2 числа (a, b) с клавиатуры и выводит результат.
сложения, умножения, вычитания, взятия остатка (a mod b) и возведения одного числа в
степень другого (𝑎
𝑏
) в следующих системах счисления: 2, 8, 10, 16. Результат округлить до
ближайшего целого числа. Смотреть образец Task3SolutionCompleted.png.
3.1. Реализовать вывод результата задачи 3 с использованием String.Format и String.Replace.
3.2. Реализовать вывод результата задачи 3 с использованием String.Format и паттерна {n}.
3.3. Реализовать вывод результата задачи 3 с использованием String Interpolation.
3.4. (*) Реализовать решение задачи 3 для любой одной дополнительной системы счисления.
3.5. (*) Предложить
3.5.1. Наимнее короткое решение (не обращая внимания на читабельность). Мой рекорд
(Искандер, 4 года разработки), для пунктов 3 и 3.3 – 27 строк кода.
3.5.2. Наиболее оптимизированное решение.
4. (**) Реализовать решение задачи 3 для всех систем счисления от 2-ой до 16-ой.
5. Написать программу, которая просит ввести сумму кредита (в тенге) со включенной
переплатой, месячный доход клиента и максимальный процент от месячной зарплаты, который
клиент может отложить для выплаты кредита. Вычислить оптимальный срок кредитования.
Пример: пусть LoanTotalAmountWithOverpayment – 12 000 000 T, MonthlyIncome – 800 000 Т,
PercentageOfSalaryForLoan – 40%.
5.1. Вырезка из разговора с сотрудником банка, который запросил данную программу – файл
CommunicationWithCustomerForTask5.m4a – прослушать.
5.2. Вывести в виде красивой таблицы план по выплате кредита по месяцам в трех валютах –
долларах, тенге, и рублях, предварительно оформив вывод данных в правильном
финансовом формате. Курс брать на сегодняшний день.
6. Написать для букмекерской контроры «OLEEEMP» программу “Угадай число”. Программа
загадывает некое число X в диапазоне от 1 до 30 и предлагает пользователю угадать. Затем
пользователь вводит некое чисило Y. Если Y > X, или Y < X, то соответственно вывести –
«попробуйте число поменьше» или «попробуйте число побольше», если Y равен X, то вывести
– «вы победили».
7. (*) Написать для букмекерской контроры «OLEEEMP» вторую версию программу “Угадай
число”. В момент запуска передать секретные аргументы, которые определяют максимальное
количество попыток угадать число. Затем пользователь вводит свою ставку в диапазоне от
100$ до 1000$. Программа загадывает некое число X в диапазоне от 1 до 30 и предлагает
пользователю угадать. Затем пользователь вводит некое чисило Y. Если Y > X, или Y < X, то
соответственно вывести – «попробуйте число поменьше» или «попробуйте число побольше»,
если Y равен X, то вывести – «вы победили». За каждую неудачную попытку угадать число,
уменьшать ставку игрока в два раза. Игра заканчивается, если игрок достиг максимального
числа попыток, но не угадал или остаток на счете стал меньше 2% от первоначальной ставки.
В случае угадывания числа с первой попытки – вернуть первоначальную ставку + 100% от
первоначальной ставки, со второй попытки – вернуть первоначальную ставку + 75% от
первоначальной ставки, с третьей попытки – +50% и т.д.
8. (*) Написать для букмекерской контроры «OLEEEMP» упрощенную версию мультиплеерной
программы «Очко (игра)», см. Википедию. Во время старта выбирается количество игроков –
от 3 до 6. Затем игроки вводят свои имена. Во время каждого хода каждый игрок по очереди
выбирает из двух пунктов – 1. запросить карту, 2. закончить игру. Если выбран пункт 1., то
игроку дается рандомная карта номиналом от 1 до 10 очков – (валет – 2, дама – 3, король – 4,
туз – 1) , если выбран пункт 2., то игрок завершает свое участие в игре и количество игроков
уменьшается на единицу. Далее ход переходит к следующему активному игроку в очереди и
процедура повторяется.
8.1. Игрок автоматически выбывает из игры, если ценность всех его карт превысила 21.
8.2. Когда все игроки закончили игру (выбрав пункт 2. или по превышению максимального
лимита в 21 очко), то система должна определить победителя – тот, кто получил
максимальное количество очков, но не превысил лимит в 21 очко. 
8.3. Если у всех игроков больше 21 очков на руках, то объявляется ничья.
8.4. В игре используется специальная колода из 52 карт - [2, 3, 4, 5, 6, 7, 8, 9, 10, В, Д, К, Т] * 4
(черви, трефы, и т.д.).
8.5. В конце игры вывести руку каждого игрока в виде: [Алия – 2 ♠, 3 ♦, В ♥, общая ценность –
7].
8.6. (*) Опубликовать рейтинг всех игроков в виде таблицы, предварительно отсортировать:
 [Чак Норрис – 1000 ♠, 1000 ♦, В 1000, общая ценность – 21].
[Танос – 6 ♠, 4 ♦, 10 ♥, общая ценность – 20].
 [Рамзан Кадыров – 7 ♠, 3 ♦, 9 ♥, общая ценность – 19].
[Ирина Аллегрова – 2 ♠, 3 ♦, В ♥, общая ценность – 7].
 [Двойной указатель на функцию, которая возвращает указатель – 2 ♠, 1 ♦, 1 ♥, общая
ценность – 4].
[Кайрат Нуртас – 1 ♠, 1 ♦, В 1, общая ценность – 3].
8.7. (**) Гарантировать, что карта, которая ушла к одному из игроков больше НЕ встерится до
конца игры. Пример – если игроку А попались карты [2-трефы, 2-черви, 2-пики, 2-бубны],
то до конца данной игры больше никто не получит эти карты.
8.8. Подсказки: используйте все для решения задачи 8 – массивы, перечисления, кортежи,
switch-case, матрицы, циклы, форматирование строк, работа с ASCII.
9. (***) В японском языке используются 2 алфавита – ХИРАГАНА и КАТАКАНА. Смотреть
изображение HiraganaKatakana.gif. Каждая буква в хирагане и катакане имеет свое латинское
представление. Т.е. букве A латинского алфавита соответствует хирагана あ и катакана ア. Вы
разрабатываете приложение для изучения японского языка. Чтобы помочь начинающим
быстрее запомнить эти сложные символы, вы должны написать код, который принимает текст
на латинице и заменяет все латинские буквы и слоги на соответствующие из хираганы и
катаканы, если такие имеются, затем возвращает модифицированный текст.
9.1. Обычно для решения этой задачи нужно знать более продвинутые возможности языка C#,
но тем не менее, самую примитивную версию можно написать и с теми знаниями,
которые есть у вас сейчас.
10. Вам дан массив типа Tuple<string, DateTime> [] объектов, с именами и датами рождения (не
дни рождения, а даты!) пользователей нашего магазина – new DateTime(1996, 7, 12). Написать
метод, который находит тех пользователей, у которых день рождения в этом месяце (даже если
уже прошло в этом месяце) и в зависимости от возраста пользователя, дает скидку, которая
считается по формуле +5% за каждую декаду (10 лет) возраста пользователя. Если день
рождения у пользователя сегодня, то дать еще +5% скидки. К примеру, если пользователь
Дима родился в 1983 году, 25 июня, то ему исполнилось 35 лет, а количество декад в 35 – 3
десятка, т.е. скидка составляет 3 * 5% = 15%. Так как сегодня у него НЕ день рождения, то еще
+5% скидки НЕ дается. Значит, нужно вывести на экран запись вида – “В этом месяце Диме
доступна скидка в размере 15％”.